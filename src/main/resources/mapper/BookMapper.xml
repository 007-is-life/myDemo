<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.BookMapper">

    <resultMap id="BaseResultMap" type="com.example.entity.Book">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="author" column="author" jdbcType="VARCHAR"/>
            <result property="publish" column="publish" jdbcType="VARCHAR"/>
            <result property="pages" column="pages" jdbcType="INTEGER"/>
            <result property="price" column="price" jdbcType="FLOAT"/>
            <result property="bookcaseid" column="bookcaseid" jdbcType="INTEGER"/>
            <result property="abled" column="abled" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,author,
        publish,pages,price,
        bookcaseid,abled
    </sql>

    <!--set标签-->
    <update id="updateByBook" parameterType="com.example.entity.Book">
        update book
        <set>
            <if test="author!=null">author = #{author},</if>
            <if test="publish!=null">publish = #{publish},</if>
            <if test="pages!=null">pages = #{pages}</if>
        </set>
        where id = #{id};
    </update>

    <!--foreach标签,从bookVO中取属性ids-->
    <select id="selectByIds" resultType="com.example.vo.BookVO">
        select * from book
            <where>
                <foreach collection="ids" item="id" open="id in (" close=")" separator=",">
                    #{id}
                </foreach>
            </where>
    </select>

    <!--foreach标签,从形参中取ids-->
    <select id="getByIds" resultType="com.example.entity.Book">
        select * from book
            <where>
                <foreach collection="ids" item="id" open="id in (" close=")" separator=",">
                    #{id}
                </foreach>
            </where>
    </select>

    <!--trim标签-->
    <select id="select" resultType="com.example.entity.Book">
        select * from book
            <trim prefix="where" prefixOverrides="and">
                <if test="name!=null">name=#{name}</if>
                <if test="author!=null">and author=#{author}</if>
                <if test="publish!=null">and publish=#{publish}</if>
            </trim>
    </select>
</mapper>
